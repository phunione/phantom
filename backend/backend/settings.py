"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path
from datetime import timedelta
import environ

env = environ.Env()
env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG') == 'true'

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', ] if DEBUG else ['13.234.250.47',
                                                            'ec2-15-206-122-191.ap-south-1.compute.amazonaws.com', ]

# Whitelist Origin Sites for CORS Policy
CORS_ALLOWED_ORIGINS = ['http://127.0.0.1:5173', 'http://localhost:5173', ] if DEBUG else [
	'https://phantomm.vercel.app', ]

# Application definition
INSTALLED_APPS = [
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',

	# REST Framework
	'rest_framework',

	# Django Browser Reload (Ease in Development)
	'django_browser_reload',

	# My Apps
	'users',
	'actor',
	'bank',
	'banker',
	'company',
	'owner',
	'ExcelData',

	# corsheaders
	'corsheaders',

	# Django Storages
	'storages',
]

# Simple JWT Authentication Backend for sending tokens when a user sends a post request
REST_FRAMEWORK = {
	'DEFAULT_AUTHENTICATION_CLASSES': (
		'rest_framework_simplejwt.authentication.JWTAuthentication',
	)
}

# Customisations for Simple JWT
SIMPLE_JWT = {
	'ACCESS_TOKEN_LIFETIME': timedelta(days=30),
	'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
	'ROTATE_REFRESH_TOKENS': False,
	'BLACKLIST_AFTER_ROTATION': False,
	'UPDATE_LAST_LOGIN': False,

	'ALGORITHM': 'HS256',
	'SIGNING_KEY': SECRET_KEY,  # WARNING: Should be changed!!!
	'VERIFYING_KEY': None,
	'AUDIENCE': None,
	'ISSUER': None,
	'JWK_URL': None,
	'LEEWAY': 0,

	'AUTH_HEADER_TYPES': ('Bearer',),
	'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
	'USER_ID_FIELD': 'id',
	'USER_ID_CLAIM': 'user_id',
	'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

	'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
	'TOKEN_TYPE_CLAIM': 'token_type',
	'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

	'JTI_CLAIM': 'jti',

	'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
	'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
	'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

MIDDLEWARE = [
	'corsheaders.middleware.CorsMiddleware',  # CORS Middleware
	'django.middleware.security.SecurityMiddleware',
	'django_browser_reload.middleware.BrowserReloadMiddleware',  # Django Browser Reload MiddleWare
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTH_USER_MODEL = 'users.User'

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'backend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

if DEBUG:
	DATABASES = {
		'default': {
			'ENGINE': 'django.db.backends.postgresql',
			'NAME': 'phantom',
			'USER': 'postgres',
			'PASSWORD': '0347',
			'PORT': '5432'
		}
	}
else:
	DATABASES = {
		'default': {
			'ENGINE': 'django.db.backends.postgresql',
			'NAME': env('DB_NAME'),
			'USER': env('DB_USER'),
			'PASSWORD': env('DB_PASSWORD'),
			'HOST': env("DB_HOST"),
			'PORT': env("DB_PORT"),
			'OPTIONS': {'sslmode': 'require'},
		}
	}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True

DATETIME_FORMAT = '%d-%m-%Y %H:%M'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

USE_S3 = not DEBUG

# Configuration For CDN
if USE_S3:  # In Production Use CDN(Amazon CloudFront in this case)
	# AWS Settings
	AWS_ACCESS_KEY_ID = env('AWS_ACCESS_KEY_ID')
	AWS_SECRET_ACCESS_KEY = env('AWS_SECRET_ACCESS_KEY')
	AWS_STORAGE_BUCKET_NAME = env('AWS_STORAGE_BUCKET_NAME')
	AWS_DEFAULT_ACL = 'public-read'
	AWS_CLOUDFRONT_DOMAIN = env('AWS_CLOUDFRONT_DOMAIN')
	AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'
	AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}

	# s3 static settings
	STATIC_LOCATION = 'static'
	STATIC_URL = f'https://{AWS_CLOUDFRONT_DOMAIN}/{STATIC_LOCATION}/'
	STATICFILES_STORAGE = 'backend.storage_backends.StaticStorage'

	# media settings
	PUBLIC_MEDIA_LOCATION = 'media'
	MEDIA_URL = f'https://{AWS_CLOUDFRONT_DOMAIN}/{PUBLIC_MEDIA_LOCATION}/'
	DEFAULT_FILE_STORAGE = 'backend.storage_backends.PublicMediaStorage'
else:  # In Development use local storage
	STATIC_URL = '/static/'
	STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
	MEDIA_URL = '/media/'
	MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
